# 利用集合模拟微信群，利用数字1，2....模拟群里的用户，生成三个群A,B,C。三个群里的用户来自1～10之间随机值，每个群里用户数最多为3个（大家可以生成3个随机数）。
# 生成好之后，依次输出3个群的用户。
# 然后，规定如果两个群里至少有一个共同用户，则两个群可以合并成新群。举例如下：
# A={1,2,3}  B={3,4}则两个群会合并成C={1,2,3,4}
# 依据上面的规则，再输出合并之后的群
# 助教：多数同学只合并了两个群，是否漏考虑了已经合并的群能否跟第三群合并呢？
# 为师：确实题目说的不是太明确
# 本题没有强调，生成新的群之后是否还要继续考虑新群之间的合并问题。所以大多数同学就认为做的都是对的。
# 这是几年前，阿里和携程ctrip的面试题,标准做法需要递归，直到最后没有合并的群为止。这里我们就简化了，以让大家掌握集合的用法为目的，但是很感谢助教老师和广大同学对问题积极思考！
import random
A,B,C=set(),set(),set()
for i in range(3):
    A.add(random.randint(1, 10))
    B.add(random.randint(1, 10))
    C.add(random.randint(1, 10))
print('A=',A,'B=',B,'C=',C,'\n合并之后的群')
if (len(A&B)!=0 and len(A&C)!=0) or (len(A&B)!=0 and len(B&C)!=0) or (len(A&C)!=0 and len(B&C)!=0):
    print('D=',A|B|C)
elif len(A&B)!=0:
    print('D=',A|B,'C=',C)
elif len(A&C)!=0:
    print('D=',A|C,'B=',B)
elif len(B&C)!=0:
    print('A=',A,'D=',B|C)
else:
    print('A=',A,'B=',B,'C=',C)